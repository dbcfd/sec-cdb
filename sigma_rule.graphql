enum RelatedType {
  Derived
  Obsoletes
  Merged
  Renamed
  Similar
}

type Related {
  id: ID
  type: RelatedType
}

enum Status {
  Stable
  Test
  Experimental
  Deprecated
  Unsupported
}

type LogSource {
  """examples: firewall, web, antivirus"""
  category: String @string(minLength: 3, maxLength: 50)
  """examples: windows, apache, check point fw1"""
  product: String @string(minLength: 3, maxLength: 50)
  """examples: sshd, applocker"""
  service: String @string(minLength: 3, maxLength: 50)
  definition: String @string(minLength: 3, maxLength: 50)
}

type Selection {
  image: String! @string(minLength: 3, maxLength: 50)
}

"""scalar JsonObject, JsonEntry should have value: JsonObject"""
type JsonEntry {
  key: String! @string(minLength: 3, maxLength: 50)
}

enum Level {
  Low
  Medium
  High
}

type SigmaRule @createModel(accountRelation: LIST, description: "https://github.com/SigmaHQ/sigma") {
  creator: DID! @accountReference
  title: String! @string(minLength: 3, maxLength: 50)
  rule_id: ID!
  related: Related
  status: Status
  description: String @string(minLength: 3, maxLength: 50)
  references: [String!] @string(minLength: 3, maxLength: 50) @list(maxLength: 30)
  author: String @string(minLength: 3, maxLength: 50)
  date: Date
  modified: Date
  tags: [String!] @string(minLength: 3, maxLength: 50) @list(maxLength: 30)
  logsource: LogSource
  detection: [JsonEntry!] @list(maxLength: 30)
  fields: [String!] @string(minLength: 3, maxLength: 50) @list(maxLength: 30)
  falsepositives: [String!] @string(minLength: 3, maxLength: 50) @list(maxLength: 30)
  level: Level  
}
